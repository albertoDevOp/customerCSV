version: "3.7"
services:
  reader:
      image: csv_image:latest
      container_name: csv_reader
      init: true
      ports:
         - "5000:5000"
      volumes:
         - type: bind
           source: ./csv
           target: /tmp/reader
         - type: bind
           source: ./reader
           target: /srv/reader
      working_dir: /srv/reader
      restart: always 
      networks:
         - app
      command: go run main.go      
  crm:
      image: golang:1.12
      container_name: crm_integrator
      init: true
      ports:
         - "6000:5000"
      volumes:
         - type: bind
           source: ./crm
           target: /srv/crm
      working_dir: /srv/crm
      restart: always  
      networks:
         - app  
      command: go run main.go
  db:
      image: postgres:10.10
      container_name: db
      ports:
         - "8001:5432"
      networks:
         - app
      volumes:
         - ./db/schema/:/docker-entrypoint-initdb.d/
         - ./db/data:/var/lib/postgresql/data
      environment:
         POSTGRES_USER: ${PG_USER}
         POSTGRES_PASSWORD: ${PG_PWD}
         POSTGRES_DB: ${PG_DB}
  nginx:
      image: nginx:1.16.1
      container_name: nginx
      volumes:
        - ./nginx.template:/etc/nginx/conf.d/nginx.template
      ports:
        - "80:80"
      environment:
        - NGINX_PORT=80
      depends_on:
        - reader
      networks:
        - app
      command: /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
networks:
      app: